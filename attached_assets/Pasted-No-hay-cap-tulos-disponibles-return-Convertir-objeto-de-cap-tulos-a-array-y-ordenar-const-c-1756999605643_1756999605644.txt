No hay capítulos disponibles
'; return; } // Convertir objeto de capítulos a array y ordenar const chaptersArray = Object.keys(chapters).map(key => ({ id: key, ...chapters[key] })).sort((a, b) => (a.order || 0) - (b.order || 0)); // Crear elementos de capítulos chaptersArray.forEach((chapter, index) => { const li = document.createElement('li'); li.className = 'bg-white p-4 rounded-xl border border-pink-200 hover:border-[#FE2C55] transition-colors cursor-pointer hover:shadow-sm'; li.innerHTML = `
${chapter.title || `Capítulo ${index + 1}`}
${chapter.wordCount ? `${chapter.wordCount} palabras` : 'Sin contar'} ${chapter.createdAt ? ` • ${new Date(chapter.createdAt).toLocaleDateString()}` : ''}
`; // Agregar event listener para abrir capítulo li.addEventListener('click', () => { openChapterReader(storyId, index); }); chaptersContainer.appendChild(li); }); } // Actualizar métricas de la historia function updateStoryMetrics(storyId, storyData) { const metricsContainer = document.getElementById('detail-metrics'); if (!metricsContainer) return; // Contar capítulos const chaptersCount = storyData.chapters ? Object.keys(storyData.chapters).length : 0; // Calcular calificación promedio const rating = storyData.ratingValue || 0; // Obtener vistas (puedes implementar un contador de vistas) const views = storyData.views || 0; metricsContainer.innerHTML = `
${views}
Visitas
${rating.toFixed(1)}
Calificación
${chaptersCount}
Capítulos
`; } // Función para cerrar detalle de historia function closeStoryDetail() { document.getElementById('story-detail-modal').classList.add('hidden'); document.getElementById('main-app').classList.remove('hidden'); // Limpiar listeners de Firebase // firebase.database().ref('stories').off(); // Solo si es necesario } // Cargar historias en tiempo real en la página principal function loadStoriesFromFirebase() { // Cargar nuevos lanzamientos firebase.database().ref('stories').orderByChild('createdAt').limitToLast(10).on('value', (snapshot) => { const stories = []; snapshot.forEach((child) => { stories.unshift({ id: child.key, ...child.val() }); }); displayStoriesInSection('new-releases', stories); }); // Cargar historias populares firebase.database().ref('stories').orderByChild('views').limitToLast(10).on('value', (snapshot) => { const stories = []; snapshot.forEach((child) => { stories.unshift({ id: child.key, ...child.val() }); }); displayStoriesInSection('popular', stories); }); // Cargar top 10 firebase.database().ref('stories').orderByChild('ratingValue').limitToLast(10).on('value', (snapshot) => { const stories = []; snapshot.forEach((child) => { stories.unshift({ id: child.key, ...child.val() }); }); displayStoriesInSection('top10', stories); }); } // Mostrar historias en una sección específica function displayStoriesInSection(sectionId, stories) { const container = document.getElementById(sectionId); if (!container || !stories || stories.length === 0) return; container.innerHTML = ''; stories.forEach(story => { const storyCard = document.createElement('div'); storyCard.className = 'story-card cursor-pointer flex-shrink-0 w-40'; storyCard.innerHTML = `
${story.title} ${story.ratingValue ? story.ratingValue.toFixed(1) : '0.0'}
${story.title || 'Sin título'}
${story.chapters ? Object.keys(story.chapters).length : 0} capítulos
`; storyCard.addEventListener('click', () => openStoryDetail(story)); container.appendChild(storyCard); }); } // Inicializar cuando el usuario se autentique firebase.auth().onAuthStateChanged((user) => { if (user) { console.log('Usuario autenticado, cargando historias desde Firebase...'); loadStoriesFromFirebase(); } else { console.log('Usuario no autenticado'); } }); // Función para actualizar información de historia en header del lector function updateStoryInfoInReader() { if (currentStory) { const storyTitleHeader = document.getElementById('story-title-header'); if (storyTitleHeader) { storyTitleHeader.textContent = currentStory.title || 'Historia sin título'; } } }
